summarise(evidence = mean(evidence)) %>%
group_by(side,eccentricity) %>%
summarise(se=se(evidence),
evidence=mean(evidence)) %>%
ggplot(aes(x=eccentricity,y=evidence,fill=side,shape=eccentricity))+
geom_abline(intercept=0, slope=0,size=1) +
geom_errorbar(aes(ymin=evidence-se,
ymax=evidence+se),
color='black')+
geom_point(size=6) +
scale_shape_manual(values=c(21,22,23,24))+
scale_color_manual(values=detection_colors)+
scale_fill_manual(values=detection_colors) +
scale_y_continuous(limits=c(-0.2,0.5)) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='evidence',
x='')+
theme(legend.position = 'none');
ggsave(paste('./figures/RC/sim/detection_decision.png',sep='/'),
width=3.5,height=3)
sim$signal_decision_kernel %>%
group_by(subj_id,side,eccentricity) %>%
summarise(evidence=mean(evidence)) %>%
group_by(subj_id,eccentricity)%>%
summarise(rel_evidence = evidence[side=='true']-evidence[side=='opposite'],
sum_evidence = evidence[side=='true']+evidence[side=='opposite']) %>%
pivot_longer(cols = ends_with('evidence'),names_to='contrast',values_to='evidence')%>%
group_by(contrast,eccentricity) %>%
summarise(se=se(evidence),
evidence=mean(evidence)) %>%
ggplot(aes(x=eccentricity,y=evidence,fill=contrast, shape=eccentricity)) +
geom_abline(intercept=0, slope=0,size=1) +
geom_errorbar(aes(ymin=evidence-se,
ymax=evidence+se),
color='black')+
geom_point(size=6) +
scale_shape_manual(values=c(21,22,23,24))+
scale_color_manual(values=detection_colors)+
scale_fill_manual(values=detection_colors) +
scale_y_continuous(limits=c(-0.2,0.5)) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='evidence',
x='')+
theme(legend.position = 'none');
ggsave(paste('./figures/RC/sim/detection_decision_sum_rel.png',sep='/'),
width=3.5,height=3);
sim$signal_confidence_kernel %>%
filter(response==1)%>%
group_by(subj_id,side,eccentricity) %>%
summarise(evidence=mean(diff)) %>%
group_by(side,eccentricity) %>%
summarise(se=se(evidence),
evidence=mean(evidence))%>%
ggplot(aes(x=eccentricity,y=evidence,fill=side,shape=eccentricity))+
geom_abline(intercept=0, slope=0,size=1) +
geom_errorbar(aes(ymin=evidence-se,
ymax=evidence+se),
color='black')+
geom_point(size=6) +
scale_shape_manual(values=c(21,22,23,24))+
scale_color_manual(values=detection_colors)+
scale_fill_manual(values=detection_colors) +
scale_y_continuous(limits=c(-0.2,0.5)) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='evidence',
x='')+
theme(legend.position = 'none');
ggsave(paste('./figures/RC/sim/detection_conf_yes.png',sep='/'),
width=3.5,height=3)
sim$signal_confidence_kernel%>%
filter(response==1)%>%
group_by(subj_id,eccentricity) %>%
summarise(rel_evidence=mean(diff[side=='true'])-mean(diff[side=='opposite']),
sum_evidence = mean(diff[side=='true'])+mean(diff[side=='opposite'])) %>%
pivot_longer(cols = ends_with('evidence'),names_to='contrast',values_to='evidence')%>%
group_by(contrast,eccentricity) %>%
summarise(se=se(evidence),
evidence=mean(evidence)) %>%
ggplot(aes(x=eccentricity,y=evidence,fill=contrast, shape=eccentricity)) +
geom_abline(intercept=0, slope=0,size=1) +
geom_errorbar(aes(ymin=evidence-se,
ymax=evidence+se),
color='black')+
geom_point(size=6) +
scale_shape_manual(values=c(21,22,23,24))+
scale_color_manual(values=evidence_colors)+
scale_fill_manual(values=evidence_colors) +
scale_y_continuous(limits=c(-0.2,0.5)) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='evidence',
x='')+
theme(legend.position = 'none');
ggsave(paste('./figures/RC/sim/detection_conf_yes_sum_rel.png',sep='/'),
width=3.5,height=3)
sim$signal_confidence_kernel %>%
filter(response==0)%>%
group_by(subj_id,side,eccentricity) %>%
summarise(evidence=mean(diff)) %>%
group_by(side,eccentricity) %>%
summarise(se=se(evidence),
evidence=mean(evidence))%>%
ggplot(aes(x=eccentricity,y=evidence,fill=side,shape=eccentricity))+
geom_abline(intercept=0, slope=0,size=1) +
geom_errorbar(aes(ymin=evidence-se,
ymax=evidence+se),
color='black')+
geom_point(size=6) +
scale_shape_manual(values=c(21,22,23,24))+
scale_color_manual(values=detection_colors)+
scale_fill_manual(values=detection_colors) +
scale_y_continuous(limits=c(-0.2,0.5)) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='evidence',
x='')+
theme(legend.position = 'none');
ggsave(paste('./figures/RC/sim/detection_conf_no.png',sep='/'),
width=3.5,height=3)
sim$signal_confidence_kernel%>%
filter(response==0)%>%
group_by(subj_id,eccentricity) %>%
summarise(rel_evidence=mean(diff[side=='true'])-mean(diff[side=='opposite']),
sum_evidence = mean(diff[side=='true'])+mean(diff[side=='opposite'])) %>%
pivot_longer(cols = ends_with('evidence'),names_to='contrast',values_to='evidence')%>%
group_by(contrast,eccentricity) %>%
summarise(se=se(evidence),
evidence=mean(evidence)) %>%
ggplot(aes(x=eccentricity,y=evidence,fill=contrast, shape=eccentricity)) +
geom_abline(intercept=0, slope=0,size=1) +
geom_errorbar(aes(ymin=evidence-se,
ymax=evidence+se),
color='black')+
geom_point(size=6) +
scale_shape_manual(values=c(21,22,23,24))+
scale_color_manual(values=evidence_colors)+
scale_fill_manual(values=evidence_colors) +
scale_y_continuous(limits=c(-0.2,0.5)) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='evidence',
x='')+
theme(legend.position = 'none');
ggsave(paste('./figures/RC/sim/detection_conf_no_sum_rel.png',sep='/'),
width=3.5,height=3)
knitr::include_graphics('figures/RC/sim/summary.png')
knitr::include_graphics('figures/design1.png')
e1 = list()
e1$df <- read_csv('../experiments/Experiment1/data/RC.csv', lazy=FALSE) %>%
group_by(subj_id, detection) %>%
mutate(confidence=confidence/1000,
# in the original coding, 3 is right and 1 is left.
# changed to be 0 for right/up and 1 for left/down, to align
# with the coding of responses.
direction = ifelse(direction==3,1,0));
e1$trial_df_unfiltered <- e1$df %>%
group_by(subj_id, trial_id) %>%
summarise(
detection = detection[timepoint==1],
direction = direction[timepoint==1],
signal = signal[timepoint==1],
response = response[timepoint==1],
RT = RT[timepoint==1]-700, # stimulus duration
confidence = confidence[timepoint==1],
correct = correct[timepoint==1],
trial_number = trial_number[timepoint==1],
logRT = log(RT[timepoint==1]),
conf_bi = ifelse(
response==1,
as.numeric(confidence),
-1*as.numeric(confidence)))%>%
group_by(subj_id) %>%
mutate(
conf_discrete = ntile(confidence,20) %>%
factor(levels=1:21))
e1$task_stats_unfiltered <- e1$trial_df_unfiltered %>%
group_by(subj_id,detection) %>%
summarise(acc=mean(correct),
RT = median(RT),
confidence=mean(confidence));
e1$trial_df <- e1$trial_df_unfiltered %>%
filter(trial_number>300);
e1$detection_df <- e1$trial_df %>%
filter(detection==1) %>%
mutate(stimulus=signal);
e1$discrimination_df <- e1$trial_df %>%
filter(detection==0) %>%
mutate(stimulus = direction);
e1 <- e1 %>%
generalStats2Tasks() %>%
testAUC() %>%
testzROC2tasks();
# plotAllAsymmetries(e1,'figures/RC-exp1-asymmetries.pdf');
knitr::include_graphics("figures/RC-exp1-asymmetries-enhanced.png")
e1$discRCdf <- e1$df %>%
filter(detection==0 &
trial_number>300) %>%
dplyr::select(-c('energyDown','energyUp'))%>%
pivot_longer(cols=starts_with('energy'),values_to='energy',names_to='measured_direction')%>%
mutate(measured_direction=ifelse(measured_direction=='energyRight',0,1),
obj_side=factor(ifelse(measured_direction==direction, 'true','opposite'),
levels=c('true','opposite')),
side=ifelse(response==measured_direction,'chosen','unchosen'),
session = round(trial_number/300)) %>%
group_by(subj_id, session) %>%
mutate(median_confidence=median(confidence)) %>%
ungroup() %>%
mutate(
binaryconf = ifelse(confidence>=median_confidence, 1, 0),
eccentricity=1,
time=(timepoint-4)/60*1000)%>%
group_by(obj_side)%>%
mutate(evidence=energy/sd(energy))
e1 <- e1 %>%
getDiscriminationKernels() %>%
contrastDiscriminationKernels()
e1$discrimination_accuracy_kernel <- e1$discrimination_accuracy_kernel %>%
group_by(subj_id, contrast)%>%
arrange(time) %>%
mutate(evidence=rollapply(evidence,5,mean,align='right',fill=NA))
e1$discrimination_confidence_kernel <- e1$discrimination_confidence_kernel %>%
group_by(subj_id, side)%>%
arrange(time) %>%
mutate(diff=rollapply(diff,5,mean,align='right',fill=NA));
e1 %>% plotDiscriminationKernels('exp1',c(0,750),c(-0.3,0.4))
e1$signalRCdf <- e1$df %>%
filter(detection==1 &
signal==1 &
trial_number>300) %>%
dplyr::select(-c('energyDown','energyUp'))%>%
pivot_longer(cols=starts_with('energy'),values_to='energy',names_to='measured_direction')%>%
mutate(measured_direction=ifelse(measured_direction=='energyRight',0,1),
side=factor(ifelse(measured_direction==direction, 'true','opposite'),
levels=c('true','opposite')),
session = round(trial_number/300)) %>%
group_by(subj_id, session,response) %>%
mutate(median_confidence=median(confidence)) %>%
ungroup() %>%
mutate(
binaryconf = ifelse(confidence>=median_confidence, 1, 0),
eccentricity=1,
time=(timepoint-4)/60*1000)%>%
group_by(side)%>%
mutate(evidence=energy/sd(energy))
e1 <- e1 %>%
getDetectionSignalKernels() %>%
contrastDetectionSignalKernels()
e1$signal_decision_kernel <- e1$signal_decision_kernel %>%
group_by(subj_id,side)%>%
arrange(time) %>%
mutate(evidence=rollapply(evidence,5,mean,align='right',fill=NA))
e1$signal_confidence_kernel <- e1$signal_confidence_kernel %>%
group_by(subj_id, side,response)%>%
arrange(time) %>%
mutate(diff=rollapply(diff,5,mean,align='right',fill=NA));
e1 %>% plotDetectionSignalKernels('exp1',c(0,750),c(-0.3,0.4))
knitr::include_graphics("figures/RC/exp1/summary.png")
knitr::include_graphics('figures/design2.png')
e2=list()
e2$df <- read_csv('../experiments/Experiment2/data/Flicker.csv', lazy=FALSE) %>%
group_by(s,task,trial_index) %>%
mutate(side=c(rep(0,48),rep(1,48)),
timepoint=rep(1:12,8),
eccentricity = rep(c(rep(1,12),rep(2,12),rep(3,12),rep(4,12)),2)) %>%
rename(subj_id = s,
trial_id = trial_index) %>%
mutate(detection = ifelse(task=='detection',1,0),
bright_side=ifelse(bright_side=='right',1,0),
signal=signal_presence,
detection=as.factor(detection),
response=as.factor(response),
correct=as.factor(correct),
subj_id=as.factor(subj_id)) %>%
ungroup() %>%
dplyr::select(subj_id,detection,trial_id,
RT,signal,correct,bright_side,
response,conf_RT,confidence,
luminance,side,timepoint,
eccentricity,trial)
e2$trial_df <- e2$df %>%
group_by(subj_id, trial_id) %>%
summarise(
detection = detection[side==1 & timepoint==1 & eccentricity == 1],
bright_side = bright_side[side==1 & timepoint==1 & eccentricity == 1],
signal = signal[side==1 & timepoint==1 & eccentricity == 1],
response = response[side==1 & timepoint==1 & eccentricity == 1],
RT = RT[side==1 & timepoint==1 & eccentricity == 1]-480, # stimulus duration
confidence = confidence[side==1 & timepoint==1 & eccentricity == 1],
correct = correct[side==1 & timepoint==1 & eccentricity == 1],
trial_number = trial[side==1 & timepoint==1 & eccentricity == 1],
conf_bi = ifelse(
response==1,
as.numeric(confidence),
-1*as.numeric(confidence)),
luminance_0=mean(luminance[side==0 & timepoint<8]),
luminance_1=mean(luminance[side==1 & timepoint<8]))%>%
group_by(subj_id) %>%
mutate(
conf_discrete = ntile(confidence,20) %>%
factor(levels=1:21),
logRT=log(RT));
e2$detection_df <- e2$trial_df %>%
filter(detection==1) %>%
mutate(stimulus=signal);
e2$discrimination_df <- e2$trial_df %>%
filter(detection==0) %>%
mutate(stimulus = bright_side);
e2 <- e2 %>% generalStats2Tasks() %>%
testAUC() %>%
testzROC2tasks();
e2$zROC <- rbind(e2$detection_zROC%>%mutate(detection=1),
e2$discrimination_zROC%>%mutate(detection=0));
e2$zROC_contast_rsquare <- e2$zROC%>%group_by(subj_id)%>%summarize(fit_diff=r.squared[detection==1]-r.squared[detection==0])
# plotAllAsymmetries(e2,'figures/RC-exp2-asymmetries.pdf');
knitr::include_graphics("figures/RC-exp2-asymmetries-enhanced.png")
e2$demeaned_df <- e2$df %>%
mutate(
evidence = ifelse(side==bright_side & signal==1,
(luminance-133)/5,
(luminance-128)/5)
)
e2$discRCdf <- e2$demeaned_df %>%
filter(detection==0) %>%
mutate(obj_side=factor(ifelse(side==bright_side, 'true','opposite'),
levels=c('true','opposite')),
side=ifelse(response==side,'chosen','unchosen')) %>%
group_by(subj_id) %>%
mutate(median_confidence=median(confidence)) %>%
ungroup() %>%
mutate(
binaryconf = ifelse(confidence>=median_confidence, 1, 0),
time=(timepoint-1)*40)
e2 <- e2 %>%
getDiscriminationKernels() %>%
contrastDiscriminationKernels() %>%
plotDiscriminationKernels('exp2',c(0,440),c(-0.4,0.7))
knitr::include_graphics("figures/RC/exp2/summary.png")
e2$signalRCdf <- e2$demeaned_df %>%
filter(detection==1 & signal==1) %>%
mutate(side=factor(ifelse(side==bright_side, 'true','opposite'),
levels=c('true','opposite'))) %>%
group_by(subj_id,response) %>%
mutate(median_confidence=median(confidence)) %>%
ungroup() %>%
mutate(
binaryconf = ifelse(confidence>=median_confidence, 1, 0),
time=(timepoint-1)*40)
e2 <- e2 %>%
getDetectionSignalKernels() %>%
contrastDetectionSignalKernels() %>%
plotDetectionSignalKernels('exp2',c(0,440),c(-0.4,0.7))
e3=list()
e3$df_unfiltered <- read_csv('../experiments/Experiment3/data/Flicker2.csv', lazy=FALSE) %>%
group_by(s,task,trial_index) %>%
mutate(side=c(rep(0,48),rep(1,48)),
timepoint=rep(1:12,8),
eccentricity = rep(c(rep(1,12),rep(2,12),rep(3,12),rep(4,12)),2)) %>%
rename(subj_id = s,
trial_id = trial_index) %>%
mutate(detection = ifelse(task=='detection',1,0),
bright_side=ifelse(bright_side=='right',1,0),
signal=signal_presence,
detection=as.factor(detection),
response=as.factor(response),
correct=as.factor(correct),
subj_id=as.factor(subj_id)) %>%
ungroup() %>%
dplyr::select(subj_id,detection,trial_id,
RT,signal,correct,bright_side,
response,conf_RT,confidence,
luminance,side,timepoint,
eccentricity,trial, brightness_boost)
e3$include_detection <- e3$df_unfiltered %>%
filter(detection==1)%>%
group_by(subj_id)%>%
summarise(acc = mean(mean(as.numeric(as.character(correct)))),
prop_max_conf = mean(confidence==1)) %>%
filter(acc>=0.55 &
prop_max_conf <= 0.7)%>%
pull(subj_id)
e3$include_discrimination <- e3$df_unfiltered %>%
filter(detection==1)%>%
group_by(subj_id)%>%
summarise(acc = mean(mean(as.numeric(as.character(correct)))),
prop_max_conf = mean(confidence==1)) %>%
filter(acc>=0.55 &
prop_max_conf <= 0.7)%>%
pull(subj_id)
e3$df <- e3$df_unfiltered %>%
filter(detection==1 & subj_id %in% e3$include_detection |
detection==0 & subj_id %in% e3$include_discrimination)
e3$trial_df <- e3$df %>%
group_by(subj_id, trial_id) %>%
summarise(
detection = detection[side==1 & timepoint==1 & eccentricity == 1],
bright_side = bright_side[side==1 & timepoint==1 & eccentricity == 1],
signal = signal[side==1 & timepoint==1 & eccentricity == 1],
response = response[side==1 & timepoint==1 & eccentricity == 1],
RT = RT[side==1 & timepoint==1 & eccentricity == 1]-480, # stimulus duration
confidence = confidence[side==1 & timepoint==1 & eccentricity == 1],
correct = correct[side==1 & timepoint==1 & eccentricity == 1],
trial_number = trial[side==1 & timepoint==1 & eccentricity == 1],
brightness_boost = brightness_boost[side==1 & timepoint==1 & eccentricity == 1],
conf_bi = ifelse(
response==1,
as.numeric(confidence),
-1*as.numeric(confidence)),
luminance_0=mean(luminance[side==0 & timepoint<8]),
luminance_1=mean(luminance[side==1 & timepoint<8]))%>%
group_by(subj_id) %>%
mutate(
conf_discrete = ntile(confidence,20) %>%
factor(levels=1:21),
logRT=log(RT));
e3$detection_df <- e3$trial_df %>%
filter(detection==1) %>%
mutate(stimulus=signal);
e3$discrimination_df <- e3$trial_df %>%
filter(detection==0) %>%
mutate(stimulus = bright_side);
e3 <- e3 %>% generalStats2Tasks() %>%
testAUC() %>%
testzROC2tasks();
e3$zROC <- rbind(e3$detection_zROC%>%mutate(detection=1),
e3$discrimination_zROC%>%mutate(detection=0));
e3$zROC_contast_rsquare <- e3$zROC%>%group_by(subj_id)%>%summarize(fit_diff=r.squared[detection==1]-r.squared[detection==0])
# plotAllAsymmetries(e2,'figures/RC-exp3-asymmetries.pdf');
knitr::include_graphics("figures/RC-exp3-asymmetries-enhanced.png")
e3$demeaned_df <- e3$df %>%
mutate(
evidence = ifelse(side==bright_side & signal==1,
(luminance-133 - brightness_boost)/5,
(luminance-128 - brightness_boost)/5))
e3$discRCdf <- e3$demeaned_df %>%
filter(detection==0) %>%
mutate(obj_side=factor(ifelse(side==bright_side, 'true','opposite'),
levels=c('true','opposite')),
side=ifelse(response==side,'chosen','unchosen')) %>%
group_by(subj_id) %>%
mutate(median_confidence=median(confidence)) %>%
ungroup() %>%
mutate(
binaryconf = ifelse(confidence>=median_confidence, 1, 0),
time=(timepoint-1)*40)
e3 <- e3 %>%
getDiscriminationKernels() %>%
contrastDiscriminationKernels() %>%
plotDiscriminationKernels('exp3',c(0,440),c(-0.4,0.8))
knitr::include_graphics("figures/RC/exp3/summary.png")
e3$signalRCdf <- e3$demeaned_df %>%
filter(detection==1 & signal==1) %>%
mutate(side=factor(ifelse(side==bright_side, 'true','opposite'),
levels=c('true','opposite'))) %>%
group_by(subj_id,response) %>%
mutate(median_confidence=median(confidence)) %>%
ungroup() %>%
mutate(
binaryconf = ifelse(confidence>=median_confidence, 1, 0),
time=(timepoint-1)*40)
e3 <- e3 %>%
getDetectionSignalKernels() %>%
contrastDetectionSignalKernels() %>%
plotDetectionSignalKernels('exp3',c(0,440),c(-0.4,0.8))
e3$discrimination_conf_PEB <- e3$trial_df %>%
filter(detection==0) %>%
group_by(subj_id, brightness_boost) %>%
summarise(confidence=mean(confidence)) %>%
group_by(subj_id)%>%
summarise(PEB=confidence[brightness_boost==2]-confidence[brightness_boost==0]);
e3$H1$t.test <- t.test(e3$discrimination_conf_PEB$PEB);
e3$H1$d <- cohensD(e3$discrimination_conf_PEB$PEB);
e3$detection_dec_PEB <- e3$trial_df %>%
filter(detection==1) %>%
group_by(subj_id, brightness_boost) %>%
summarise(P=mean(as.numeric(as.character(response))))%>%
group_by(subj_id)%>%
summarise(PEB=P[brightness_boost==2]-P[brightness_boost==0]);
e3$H2 <- t.test(e3$detection_dec_PEB$PEB);
e3$PEB_interaction <- e3$trial_df %>%
filter(correct==1 & signal==1) %>%
group_by(subj_id, detection, brightness_boost) %>%
summarise(confidence=mean(confidence)) %>%
group_by(subj_id,detection) %>%
summarise(PEB=confidence[brightness_boost==2]-confidence[brightness_boost==0]) %>%
group_by(subj_id) %>%
summarise(PEB_diff = PEB[detection==0]-PEB[detection==1]);
e3$H3 <- t.test(e3$PEB_interaction$PEB_diff);
e3$yes_conf_PEB <- e3$trial_df %>%
filter(detection==1 & response==1) %>%
group_by(subj_id, brightness_boost) %>%
summarise(confidence=mean(confidence)) %>%
group_by(subj_id)%>%
summarise(PEB=confidence[brightness_boost==2]-confidence[brightness_boost==0]);
e3$H4$BF <- ttestBF(e3$yes_conf_PEB$PEB,rscale=e3$H1$d);
e3$H4$t.test <- t.test(e3$yes_conf_PEB$PEB)
e3$no_conf_PEB <- e3$trial_df %>%
filter(detection==1 & response==0) %>%
group_by(subj_id, brightness_boost) %>%
summarise(confidence=mean(confidence)) %>%
group_by(subj_id)%>%
summarise(PEB=confidence[brightness_boost==2]-confidence[brightness_boost==0]);
e3$H5$BF <- ttestBF(e3$no_conf_PEB$PEB,rscale=e3$H1$d);
e3$H5$t.test <- t.test(e3$no_conf_PEB$PEB)
